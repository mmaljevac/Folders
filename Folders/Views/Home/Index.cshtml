@model MainViewModel;

@{
    ViewData["Title"] = "Folders";
}

<div class="row">
    <div class="col-6">
        <h2>Folders</h2>

        <a class="btn btn-dark my-3" asp-controller="Folders" asp-action="Create" asp-route-id="@ViewBag.id">Add</a>

        @if (Model.Folders.Count() > 0)
        {
            <table class="table table-borderless table-striped">
                @foreach (var folder in Model.Folders)
                {
                    if (ViewBag.id == folder.Id)
                    {
                        <tr>
                            <td><a asp-action="Index" asp-route-id="@folder.Id" style="font-weight: bold">@folder.Name</a></td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td><a asp-action="Index" asp-route-id="@folder.Id">@folder.Name</a></td>
                        </tr>
                    }
                    await showChildren(folder);
                }
            </table>
        }
        else
        {
            <p>No folders available.</p>
        }
    </div>
    <div class="col-6">
        @if (Model.SelectedFolder != null)
        {
            <h2>@Model.SelectedFolder.Name</h2>

            <a class="btn btn-dark my-3" asp-controller="Files" asp-action="Create" asp-route-id="@ViewBag.id">Add</a>

            <partial name="_Files.cshtml" />
        }
    </div>
</div>

@{
    async System.Threading.Tasks.Task showChildren(FolderViewModel folder)
    {
        foreach (var child in folder.ChildFolders)
        {
            if (ViewBag.id == child.Id)
            {
                <tr>
                    <td style="text-indent: @(child.Depth + "rem")"><a asp-action="Index" asp-route-id="@child.Id" style="font-weight: bold">@child.Name</a></td>
                </tr>
            }
            else
            {
                <tr>
                    <td style="text-indent: @(child.Depth + "rem")"><a asp-action="Index" asp-route-id="@child.Id">@child.Name</a></td>
                </tr>
            }
            await showChildren(child);
        }
    }
}